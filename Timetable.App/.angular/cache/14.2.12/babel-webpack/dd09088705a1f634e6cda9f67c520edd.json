{"ast":null,"code":"/*!\n  * Bootstrap manipulator.js v5.1.0 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Manipulator = factory());\n})(this, function () {\n  'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.1.0): dom/manipulator.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  function normalizeData(val) {\n    if (val === 'true') {\n      return true;\n    }\n    if (val === 'false') {\n      return false;\n    }\n    if (val === Number(val).toString()) {\n      return Number(val);\n    }\n    if (val === '' || val === 'null') {\n      return null;\n    }\n    return val;\n  }\n  function normalizeDataKey(key) {\n    return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`);\n  }\n  const Manipulator = {\n    setDataAttribute(element, key, value) {\n      element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);\n    },\n    removeDataAttribute(element, key) {\n      element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);\n    },\n    getDataAttributes(element) {\n      if (!element) {\n        return {};\n      }\n      const attributes = {};\n      Object.keys(element.dataset).filter(key => key.startsWith('bs')).forEach(key => {\n        let pureKey = key.replace(/^bs/, '');\n        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);\n        attributes[pureKey] = normalizeData(element.dataset[key]);\n      });\n      return attributes;\n    },\n    getDataAttribute(element, key) {\n      return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));\n    },\n    offset(element) {\n      const rect = element.getBoundingClientRect();\n      return {\n        top: rect.top + window.pageYOffset,\n        left: rect.left + window.pageXOffset\n      };\n    },\n    position(element) {\n      return {\n        top: element.offsetTop,\n        left: element.offsetLeft\n      };\n    }\n  };\n  return Manipulator;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Manipulator","normalizeData","val","Number","toString","normalizeDataKey","key","replace","chr","toLowerCase","setDataAttribute","element","value","setAttribute","removeDataAttribute","removeAttribute","getDataAttributes","attributes","Object","keys","dataset","filter","startsWith","forEach","pureKey","charAt","slice","length","getDataAttribute","getAttribute","offset","rect","getBoundingClientRect","top","window","pageYOffset","left","pageXOffset","position","offsetTop","offsetLeft"],"sources":["C:/Users/MikolajMakowski/source/repos/Mik1mak/Timetable-A/Timetable.App/node_modules/bootstrap/js/dist/dom/manipulator.js"],"sourcesContent":["/*!\n  * Bootstrap manipulator.js v5.1.0 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Manipulator = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.1.0): dom/manipulator.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  function normalizeData(val) {\n    if (val === 'true') {\n      return true;\n    }\n\n    if (val === 'false') {\n      return false;\n    }\n\n    if (val === Number(val).toString()) {\n      return Number(val);\n    }\n\n    if (val === '' || val === 'null') {\n      return null;\n    }\n\n    return val;\n  }\n\n  function normalizeDataKey(key) {\n    return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`);\n  }\n\n  const Manipulator = {\n    setDataAttribute(element, key, value) {\n      element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);\n    },\n\n    removeDataAttribute(element, key) {\n      element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);\n    },\n\n    getDataAttributes(element) {\n      if (!element) {\n        return {};\n      }\n\n      const attributes = {};\n      Object.keys(element.dataset).filter(key => key.startsWith('bs')).forEach(key => {\n        let pureKey = key.replace(/^bs/, '');\n        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);\n        attributes[pureKey] = normalizeData(element.dataset[key]);\n      });\n      return attributes;\n    },\n\n    getDataAttribute(element, key) {\n      return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));\n    },\n\n    offset(element) {\n      const rect = element.getBoundingClientRect();\n      return {\n        top: rect.top + window.pageYOffset,\n        left: rect.left + window.pageXOffset\n      };\n    },\n\n    position(element) {\n      return {\n        top: element.offsetTop,\n        left: element.offsetLeft\n      };\n    }\n\n  };\n\n  return Manipulator;\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}